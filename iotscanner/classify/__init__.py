import subprocess
import re
import requests

device_port_fingerprints = {
    "Amazon Echo": {4070, 4071, 55442, 55443},
    "August Doorbell": {554, 8554, 19531},
    "Belkin Cam": {80, 81, 443, 9964, 49153},
    "Belkin Motion": {53, 49152},
    "Belkin Switch": {53, 49155},
    "Dlink Cam": {21, 23, 5001, 5004, 16119},
    "Google Chromecast": {8008, 8009, 9000},
    "Google Home": {8008, 8009, 9000, 10001},
    "HP Printer": {80, 443, 631, 3910, 3911, 8080, 9100, 9220, 53048},
    # "Hue bulb": {80, 8080},
    # "iHome Plug":{80},
    "Netatmo Cam": {80, 5555},
    "Samsung Cam": {80, 443, 554, 943, 4520, 49152},
    "Smart Things": {23, 39500},
    "TPLink Cam": {80, 554, 8080},
    "TPLink Switch": {80, 9999},
    "Triby Speaker": {80, 5080, 44395},
    "Vivitar power": {6668},
    "Whithings Sleep": {22, 7685, 7888}
}

ports_to_scan = set().union(*device_port_fingerprints.values())

iot_vendors = [
    'adlink',
    'advantech',
    'akamai',
    'amazon',
    'arm',
    'aws',
    'bosch',
    'bt',
    'citrix',
    'davra',
    'dell',
    'device insight',
    'dg logik',
    'digital concepts',
    'dxc',
    'emerson',
    'epam systems',
    'eurotech',
    'fit',
    'foghorn',
    'fujitsu',
    'gemalto',
    'grandcentrix',
    'hcl',
    'hitachi',
    'ibm',
    'infosys',
    'intel',
    'itac',
    'ixperta',
    'kontron',
    'kpit',
    'navyug',
    'nexiona',
    'oracle',
    'qsc',
    'qualcomm',
    'robotron',
    'samsung',
    'sap',
    'siemens',
    'sierra',
    'telekom',
    'vodafone',
    'xiaomi'
]

iot_os = [
    'raspbian',
    'ihome',
    'irobot',
    'wiznet',
    'freebsd',
    'lite',
    'tiny',
    'contiki',
    'mantis',
    'android',
    'printer',
    'tv',
    'smart',
    'light',
    'vacuum',
    'sensor'
]

MAC_REGEX = r'MAC Address\: ((?:[0-9a-fA-F]:?){12}) (\([a-zA-Z0-9\., ]*\))'


def get_mac_info(host):
    result = subprocess.run(["nmap", "-O", "-Pn", host], capture_output=True)
    if result.returncode == 0:
        output = str(result.stdout)
        m = re.search(MAC_REGEX, output)
        if m:
            return m.group(1), m.group(2)[1:-1]
    return None, None


def get_mac_vendor(mac):
    rs = requests.get(f"https://api.macvendors.com/{mac}")
    if rs.status_code == 200:
        return rs.text
    else:
        return None
